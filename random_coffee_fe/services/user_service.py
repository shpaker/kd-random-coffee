from models.user_manager import UserManager
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from config import MODER, MODER_1
import random
from models.user import UserStates, User

user_manager = UserManager()

async def send_welcome(chat_id):
    user = user_manager.get_user(chat_id)
    user.state = UserStates.INIT
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton("–ù–ê–ß–ê–¢–¨"))
    return "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:", keyboard

async def handle_start(message_text, chat_id):
    user = user_manager.get_user(chat_id)
    if user.state == UserStates.INIT and message_text == "–ù–ê–ß–ê–¢–¨":
        user.state = UserStates.WAITING_NAME
        return "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Random Coffee V1 Students Edition! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –∏–º—è."
    else:
        return "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–ê–ß–ê–¢–¨, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å."
   
async def handle_name(name, chat_id):
    user = user_manager.get_user(chat_id)
    user.name = name
    user.state = UserStates.EMAIL_SENT
    return f"üíå{name} –¢–µ–ø–µ—Ä—å —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É.\n–ö–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω –µ–≥–æ –æ–¥–æ–±—Ä–∏—Ç, —Ç—ã –ø–æ–ª—É—á–∏—à—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ."

async def handle_moderation_approval(chat_id):
    user = user_manager.get_user(chat_id)
    approval_status = random.choice(["approved", "declined"])

    if approval_status == "approved":
        user.state = UserStates.ONBOARDING
        onboarding_messages = [
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Random Coffee! üéâ\n–ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ!\n–î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!",
            "–û—Ç–ª–∏—á–Ω–æ! üéâ\n–†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ Random Coffee!\n–î–∞–≤–∞–π —É–∑–Ω–∞–µ–º –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –ø–æ–ª—É—á—à–µ!",
            "–£—Ä–∞! üéâ\n–¢—ã —Ç–µ–ø–µ—Ä—å —á–∞—Å—Ç—å Random Coffee!\n–î–∞–≤–∞–π —É–∑–Ω–∞–µ–º –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –ø–æ–ª—É—á—à–µ!"
        ]
        return random.choice(onboarding_messages), True
    else:
        return "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –æ—Ç–∫–ª–æ–Ω–∏–ª –≤–∞—à—É –∑–∞—è–≤–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.", False

async def show_main_menu(chat_id):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton("–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å"))
    keyboard.add(KeyboardButton("–ö–ª—É–±—ã"))
    keyboard.add(KeyboardButton("–ü–æ–¥–æ–±—Ä–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞"))
    return "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", keyboard

def get_ready_status_keyboard():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("–ì–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é", callback_data="ready"))
    keyboard.add(InlineKeyboardButton("–ù–µ –≥–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é", callback_data="not_ready"))
    keyboard.add(InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
    return keyboard

def get_meeting_type_keyboard():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("Tet-a-tet", callback_data="tet_a_tet"))
    keyboard.add(InlineKeyboardButton("–ì—Ä—É–ø–ø–æ–≤–∞—è", callback_data="group"))
    keyboard.add(InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
    return keyboard

def get_club_keyboard():
    keyboard = InlineKeyboardMarkup()
    clubs = ["Dota 2", "CS2", "Genshin Impact", "HonkaiStarRail", "Tet-a-tet", "ZZZ", "Valorant", "Mobile Legends", "ToF", "WutheringWaves"]
    for club in clubs:
        keyboard.add(InlineKeyboardButton(club, callback_data=club))
    keyboard.add(InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
    return keyboard

async def handle_callback_query(call_data, chat_id):
    user = user_manager.get_user(chat_id)
    if call_data in ["ready", "not_ready"]:
        user.ready_status = call_data == "ready"
        return "–í–∞—à —Å—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω: " + ("–ì–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é" if call_data == "ready" else "–ù–µ –≥–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é")
    elif call_data in ["Dota 2", "CS2", "Genshin Impact", "HonkaiStarRail", "Tet-a-tet", "ZZZ", "Valorant", "Mobile Legends", "ToF", "WutheringWaves"]:
        if call_data in user.clubs:
            user.clubs.remove(call_data)
            return f"–í—ã –≤—ã—à–ª–∏ –∏–∑ –∫–ª—É–±–∞: {call_data}"
        else:
            user.clubs.append(call_data)
            return f"–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∫–ª—É–±—É: {call_data}"
    elif call_data == "main_menu":
        user.state = UserStates.ONBOARDING
        return await show_main_menu(chat_id)
    elif call_data in ["tet_a_tet", "group"]:
        user.state = UserStates.CREATE_MEETING
        return "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª—É–± –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏:", get_club_keyboard()